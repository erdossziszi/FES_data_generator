StudentsNr = 5;
InstructorsNr = 5;
DaysNr = 1;
SlotsPerDay = 12;
AvailabilitySlotsLenght = 3;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 2;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|1, 1, 1, 1, |1, 0, 0, 1, |1, 0, 1, 1, |1, 1, 1, 1, |1, 1, 1, 1|];
StudentsProgramm = [1, 1, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 1];
StudentsSupervisorId = [3, 1, 1, 3, 3];
StudentsCourseIds = [{1}, {2}, {2}, {2}, {1}];
StudentsAvailability = [|0, 1, 1, 1, |0, 1, 1, 1, |0, 0, 1, 1, |0, 1, 1, 1, |1, 0, 0, 1|];
TheoryticalMinCard = [2, 1, 1, 2, 2];
CoursesInstructorIds = [{2, 5}, {1, 2}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2];
LunchTsMinLen = 1;
LunchStarts = [6..7];
SupervisorAvailable = 5;
OptimalLunchLenght = [2, 1];
OptimalStartTs = [1, 2];
OptimalFinishTs = [1, 11];
MinimizeRooms = 500;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 0;
Mergeability = 2;
