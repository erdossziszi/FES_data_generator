StudentsNr = 10;
InstructorsNr = 82;
DaysNr = 1;
SlotsPerDay = 10;
AvailabilitySlotsLenght = 10;
RoomNr = 1;
ProgrammNr = 1;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 4;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, |0, |0, |0, |1, |0, |1, |1, |0, |1, |1, |1, |1, |1, |0, |1, |1, |0, |0, |1, |1, |1, |0, |0, |1, |1, |0, |0, |1, |0, |0, |0, |1, |0, |0, |1, |1, |1, |1, |1, |0, |0, |0, |0, |1, |1, |0, |1, |0, |1, |1, |0, |0, |0, |1, |0, |0, |1, |0, |0, |1, |1, |0, |1, |1, |0, |1, |1, |0, |0, |0, |1, |1, |0, |1, |0, |0, |1, |1, |1, |0, |1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [38, 45, 32, 64, 51, 51, 12, 23, 71, 43];
StudentsCourseIds = [{1, 2}, {3, 4}, {1, 3}, {1, 4}, {2, 4}, {1, 4}, {3, 4}, {1, 2}, {1, 3}, {1, 3}];
StudentsAvailability = [|0, |1, |1, |0, |1, |0, |0, |1, |0, |1|];
TheoryticalMinCard = [2, 2, 3, 2, 2, 2, 2, 2, 2, 2];
CoursesInstructorIds = [{7, 13, 14, 15, 22, 25, 34, 38, 41, 49, 50, 57, 59, 67, 71, 73}, {2, 3, 4, 8, 9, 10, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 39, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 56, 58, 59, 62, 65, 66, 69, 70, 71, 72, 74, 75, 77, 81, 82}, {2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 33, 34, 36, 37, 42, 43, 44, 46, 47, 50, 51, 53, 54, 56, 63, 65, 66, 67, 68, 69, 76, 77, 82}, {3, 4, 7, 9, 10, 14, 15, 16, 18, 20, 22, 24, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 60, 63, 64, 65, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
LunchTsMinLen = 2;
LunchStarts = [3..7];
SupervisorAvailable = 5;
OptimalLunchLenght = [3, 3];
OptimalStartTs = [2, 1];
OptimalFinishTs = [1, 9];
MinimizeRooms = 100;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 20;
Mergeability = 0;
