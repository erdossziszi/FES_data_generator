StudentsNr = 10;
InstructorsNr = 5;
DaysNr = 1;
SlotsPerDay = 10;
AvailabilitySlotsLenght = 10;
RoomNr = 1;
ProgrammNr = 2;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 3;
InstructorsProgramm = [{1, 2}, {2}, {1, 2}, {2}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|1, |1, |1, |1, |0|];
StudentsProgramm = [1, 1, 1, 2, 1, 2, 2, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [5, 5, 5, 2, 3, 1, 4, 5, 5, 5];
StudentsCourseIds = [{1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}];
StudentsAvailability = [|1, |1, |1, |1, |0, |1, |1, |0, |0, |1|];
TheoryticalMinCard = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3];
CoursesInstructorIds = [{5}, {1, 2, 3, 4}, {5}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
LunchTsMinLen = 1;
LunchStarts = [3..7];
SupervisorAvailable = 5;
OptimalLunchLenght = [2, 1];
OptimalStartTs = [0, 0];
OptimalFinishTs = [1, 10];
MinimizeRooms = 300;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 10;
Mergeability = 0;
