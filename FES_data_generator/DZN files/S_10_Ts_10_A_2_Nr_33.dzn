StudentsNr = 10;
InstructorsNr = 28;
DaysNr = 1;
SlotsPerDay = 10;
AvailabilitySlotsLenght = 2;
RoomNr = 1;
ProgrammNr = 1;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 1;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, 1, 1, 0, 1, |0, 1, 1, 1, 1, |0, 0, 0, 1, 1, |0, 1, 1, 1, 1, |0, 1, 1, 1, 1, |0, 0, 1, 1, 1, |1, 1, 1, 1, 1, |0, 0, 1, 1, 0, |0, 0, 0, 0, 0, |1, 1, 1, 0, 0, |1, 1, 1, 1, 0, |1, 0, 0, 0, 1, |0, 1, 1, 1, 1, |1, 1, 1, 1, 0, |0, 1, 1, 1, 1, |1, 1, 0, 1, 1, |0, 1, 1, 0, 0, |0, 0, 1, 0, 1, |1, 1, 0, 1, 0, |0, 1, 1, 1, 0, |0, 1, 1, 1, 1, |0, 1, 1, 1, 1, |0, 1, 1, 1, 1, |0, 1, 1, 0, 0, |1, 1, 1, 1, 1, |0, 1, 1, 1, 1, |0, 1, 1, 1, 0, |1, 1, 1, 1, 0|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [12, 20, 3, 1, 26, 26, 28, 17, 12, 23];
StudentsCourseIds = [{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}];
StudentsAvailability = [|0, 0, 0, 0, 0, |1, 1, 1, 1, 1, |1, 0, 1, 1, 1, |1, 1, 1, 1, 1, |1, 0, 1, 1, 1, |0, 0, 1, 0, 1, |0, 0, 1, 1, 1, |1, 1, 1, 1, 1, |0, 0, 0, 0, 1, |0, 1, 1, 1, 1|];
TheoryticalMinCard = [2, 2, 2, 2, 1, 1, 2, 2, 2, 2];
CoursesInstructorIds = [{26}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
LunchTsMinLen = 0;
LunchStarts = [2..7];
SupervisorAvailable = 0;
OptimalLunchLenght = [0, 0];
OptimalStartTs = [0, 0];
OptimalFinishTs = [0, 10];
MinimizeRooms = 100;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 20;
Mergeability = 1;
