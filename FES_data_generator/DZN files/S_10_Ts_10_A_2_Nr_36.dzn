StudentsNr = 10;
InstructorsNr = 3;
DaysNr = 1;
SlotsPerDay = 10;
AvailabilitySlotsLenght = 2;
RoomNr = 1;
ProgrammNr = 1;
DegreeNr = 2;
RolesNr = 1;
CoursesNr = 3;
InstructorsProgramm = [{1}, {1}, {1}];
InstructorRolesPerProgramm = [|{2, 3}|];
InstructorsAvailability = [|0, 0, 1, 1, 1, |0, 1, 1, 0, 0, |0, 0, 1, 1, 1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [2, 1, 2, 2, 2, 1, 1, 1, 1, 2];
StudentsSupervisorId = [3, 2, 2, 3, 3, 3, 2, 1, 3, 2];
StudentsCourseIds = [{1, 2, 3}, {}, {1, 2, 3}, {1, 2, 3}, {1, 2, 3}, {}, {}, {}, {}, {1, 2, 3}];
StudentsAvailability = [|0, 1, 1, 0, 0, |1, 1, 1, 0, 1, |1, 1, 1, 1, 1, |0, 1, 1, 1, 1, |1, 1, 1, 1, 1, |0, 1, 1, 1, 0, |0, 0, 0, 1, 1, |1, 1, 1, 1, 1, |1, 1, 0, 1, 1, |1, 0, 1, 1, 1|];
TheoryticalMinCard = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0];
CoursesInstructorIds = [{1, 2}, {3}, {2, 3}];
RolesDemands = [1];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
LunchTsMinLen = 0;
LunchStarts = [4..6];
SupervisorAvailable = 0;
OptimalLunchLenght = [1, 2];
OptimalStartTs = [2, 1];
OptimalFinishTs = [0, 10];
MinimizeRooms = 300;
RolesSoftContinuity = [|1|4|];
SameDegreeInRoom = 10;
Mergeability = 1;
