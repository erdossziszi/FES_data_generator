StudentsNr = 10;
InstructorsNr = 20;
DaysNr = 1;
SlotsPerDay = 10;
AvailabilitySlotsLenght = 5;
RoomNr = 1;
ProgrammNr = 2;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 2;
InstructorsProgramm = [{2}, {1}, {2}, {2}, {2}, {1, 2}, {1, 2}, {2}, {2}, {1}, {1, 2}, {2}, {2}, {1, 2}, {1}, {2}, {2}, {2}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, 1, |0, 0, |0, 1, |1, 1, |1, 1, |0, 1, |0, 0, |1, 0, |1, 1, |1, 1, |1, 1, |1, 1, |1, 1, |0, 1, |0, 1, |1, 0, |1, 1, |0, 0, |1, 0, |1, 1|];
StudentsProgramm = [2, 1, 1, 1, 2, 1, 1, 1, 2, 2];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [13, 7, 7, 6, 13, 19, 19, 10, 14, 12];
StudentsCourseIds = [{2}, {2}, {1}, {1}, {1}, {2}, {2}, {2}, {2}, {1}];
StudentsAvailability = [|0, 1, |1, 1, |1, 1, |0, 1, |0, 1, |0, 1, |0, 1, |1, 1, |1, 0, |1, 1|];
TheoryticalMinCard = [2, 1, 2, 1, 2, 2, 2, 2, 2, 1];
CoursesInstructorIds = [{2, 3, 6, 8, 11, 12, 15}, {7, 18}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
LunchTsMinLen = 1;
LunchStarts = [2..7];
SupervisorAvailable = 0;
OptimalLunchLenght = [3, 1];
OptimalStartTs = [1, 0];
OptimalFinishTs = [1, 10];
MinimizeRooms = 400;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 0;
Mergeability = 0;
