StudentsNr = 10;
InstructorsNr = 3;
DaysNr = 2;
SlotsPerDay = 15;
AvailabilitySlotsLenght = 15;
RoomNr = 1;
ProgrammNr = 2;
DegreeNr = 3;
RolesNr = 1;
CoursesNr = 4;
InstructorsProgramm = [{2}, {1}, {1}];
InstructorRolesPerProgramm = [|{3}|{1}|];
InstructorsAvailability = [|0, 1, |0, 1, |0, 1|];
StudentsProgramm = [2, 1, 1, 1, 2, 1, 1, 2, 2, 1];
StudentsDegree = [3, 2, 3, 3, 2, 3, 1, 1, 3, 3];
StudentsSupervisorId = [1, 2, 2, 2, 1, 3, 3, 1, 1, 2];
StudentsCourseIds = [{1, 4}, {}, {1, 2}, {2, 3}, {}, {3, 4}, {1, 3, 4}, {1, 2, 3}, {1, 3}, {1, 2}];
StudentsAvailability = [|1, 1, |1, 1, |0, 1, |0, 0, |0, 1, |1, 1, |0, 1, |0, 1, |0, 0, |0, 1|];
TheoryticalMinCard = [1, 1, 1, 2, 0, 1, 1, 1, 1, 1];
CoursesInstructorIds = [{1, 3}, {1, 2}, {2}, {2, 3}];
RolesDemands = [1];
RolesContinuity = [];
ExamLen = [2, 1, 2, 2, 1, 2, 1, 1, 2, 2];
LunchTsMinLen = 1;
LunchStarts = [4..9, 22..26];
SupervisorAvailable = 5;
OptimalLunchLenght = [2, 1];
OptimalStartTs = [1, 0];
OptimalFinishTs = [2, 15];
MinimizeRooms = 100;
RolesSoftContinuity = [|1|1|];
SameDegreeInRoom = 10;
Mergeability = 1;
