StudentsNr = 10;
InstructorsNr = 5;
DaysNr = 1;
SlotsPerDay = 15;
AvailabilitySlotsLenght = 15;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 3;
RolesNr = 0;
CoursesNr = 0;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, |1, |0, |1, |1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [3, 3, 2, 3, 1, 2, 1, 1, 1, 3];
StudentsSupervisorId = [1, 4, 1, 2, 3, 1, 5, 2, 1, 4];
StudentsCourseIds = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}];
StudentsAvailability = [|1, |0, |0, |0, |0, |1, |1, |0, |0, |0|];
TheoryticalMinCard = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
CoursesInstructorIds = [];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [2, 2, 1, 2, 1, 1, 1, 1, 1, 2];
LunchTsMinLen = 0;
LunchStarts = [5..8];
SupervisorAvailable = 0;
OptimalLunchLenght = [3, 0];
OptimalStartTs = [2, 0];
OptimalFinishTs = [0, 15];
MinimizeRooms = 400;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 0;
Mergeability = 1;
