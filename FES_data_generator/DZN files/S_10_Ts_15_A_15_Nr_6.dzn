StudentsNr = 10;
InstructorsNr = 23;
DaysNr = 1;
SlotsPerDay = 15;
AvailabilitySlotsLenght = 15;
RoomNr = 1;
ProgrammNr = 1;
DegreeNr = 3;
RolesNr = 0;
CoursesNr = 4;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|1, |0, |1, |1, |0, |0, |1, |1, |1, |1, |1, |1, |1, |1, |1, |1, |0, |1, |0, |0, |0, |0, |0|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 3, 1, 3, 2, 3, 1, 2, 2, 3];
StudentsSupervisorId = [23, 1, 8, 19, 22, 16, 22, 3, 20, 20];
StudentsCourseIds = [{1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}];
StudentsAvailability = [|1, |1, |1, |0, |0, |1, |1, |0, |1, |1|];
TheoryticalMinCard = [5, 4, 4, 4, 4, 4, 4, 4, 4, 4];
CoursesInstructorIds = [{2, 9, 16, 21}, {1, 3, 6, 9, 13, 15, 18, 19, 22}, {1, 4, 5, 8, 10, 16, 17}, {2, 7, 8, 20, 21}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 1, 1, 1, 2, 1, 1, 2, 2, 1];
LunchTsMinLen = 0;
LunchStarts = [4..9];
SupervisorAvailable = 0;
OptimalLunchLenght = [0, 0];
OptimalStartTs = [1, 0];
OptimalFinishTs = [1, 15];
MinimizeRooms = 500;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 10;
Mergeability = 1;
