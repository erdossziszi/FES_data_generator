StudentsNr = 10;
InstructorsNr = 8;
DaysNr = 1;
SlotsPerDay = 15;
AvailabilitySlotsLenght = 1;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 2;
RolesNr = 0;
CoursesNr = 6;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, |1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, |0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, |1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, |0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [2, 2, 2, 2, 2, 2, 2, 1, 1, 1];
StudentsSupervisorId = [4, 6, 5, 4, 6, 1, 2, 1, 2, 8];
StudentsCourseIds = [{1, 2, 3, 5}, {1, 3, 5, 6}, {1, 3, 5, 6}, {1, 3, 4, 6}, {2, 3, 4, 6}, {1, 2, 4, 6}, {1, 2, 3, 4}, {1, 2, 5}, {1, 2, 6}, {2, 3, 5}];
StudentsAvailability = [|1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, |1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1|];
TheoryticalMinCard = [4, 4, 4, 4, 4, 4, 4, 4, 4, 3];
CoursesInstructorIds = [{4}, {3, 6, 7, 8}, {3, 5, 7}, {2, 3, 8}, {6, 7, 8}, {1, 7, 8}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
LunchTsMinLen = 0;
LunchStarts = [4..9];
SupervisorAvailable = 5;
OptimalLunchLenght = [2, 1];
OptimalStartTs = [0, 0];
OptimalFinishTs = [1, 15];
MinimizeRooms = 100;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 10;
Mergeability = 2;
