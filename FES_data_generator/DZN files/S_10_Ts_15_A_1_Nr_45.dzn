StudentsNr = 10;
InstructorsNr = 5;
DaysNr = 1;
SlotsPerDay = 15;
AvailabilitySlotsLenght = 1;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 3;
RolesNr = 0;
CoursesNr = 5;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, |0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, |0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, |0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 3, 3, 3, 3, 3, 1, 1, 3, 3];
StudentsSupervisorId = [3, 1, 4, 4, 2, 2, 1, 4, 5, 1];
StudentsCourseIds = [{3}, {1, 3, 4, 5}, {2, 3, 4, 5}, {1, 2, 3, 5}, {2, 3, 4, 5}, {1, 2, 3, 5}, {1}, {1}, {1, 2, 3, 4}, {1, 2, 3, 4}];
StudentsAvailability = [|0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, |1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, |0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, |0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, |1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, |0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, |0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1|];
TheoryticalMinCard = [2, 4, 4, 4, 4, 4, 1, 2, 4, 4];
CoursesInstructorIds = [{1, 2, 3, 5}, {1, 2, 4, 5}, {1, 2, 4, 5}, {3, 4}, {3, 5}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
LunchTsMinLen = 0;
LunchStarts = [4..10];
SupervisorAvailable = 0;
OptimalLunchLenght = [2, 1];
OptimalStartTs = [0, 0];
OptimalFinishTs = [1, 15];
MinimizeRooms = 400;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 10;
Mergeability = 1;
