StudentsNr = 10;
InstructorsNr = 4;
DaysNr = 1;
SlotsPerDay = 20;
AvailabilitySlotsLenght = 10;
RoomNr = 1;
ProgrammNr = 1;
DegreeNr = 3;
RolesNr = 2;
CoursesNr = 9;
InstructorsProgramm = [{1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = [|{}, {2, 3, 4}|];
InstructorsAvailability = [|1, 0, |1, 1, |0, 1, |0, 0|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [2, 2, 2, 3, 3, 1, 3, 2, 2, 2];
StudentsSupervisorId = [1, 1, 1, 3, 2, 1, 1, 3, 4, 4];
StudentsCourseIds = [{}, {}, {}, {1, 2, 3, 4, 5, 6, 7, 8, 9}, {1, 2, 3, 4, 5, 6, 7, 8, 9}, {1, 2}, {1, 2, 3, 4, 5, 6, 7, 8, 9}, {}, {}, {}];
StudentsAvailability = [|0, 1, |1, 1, |1, 1, |1, 1, |1, 1, |1, 1, |1, 1, |0, 1, |1, 0, |1, 1|];
TheoryticalMinCard = [1, 1, 1, 1, 1, 1, 1, 0, 0, 0];
CoursesInstructorIds = [{1, 2}, {1}, {2, 3}, {4}, {2, 3}, {1, 2, 3, 4}, {3}, {2, 4}, {2, 3, 4}];
RolesDemands = [1, 1];
RolesContinuity = [];
ExamLen = [1, 1, 1, 2, 2, 2, 2, 1, 1, 1];
LunchTsMinLen = 1;
LunchStarts = [8..15];
SupervisorAvailable = 5;
OptimalLunchLenght = [1, 1];
OptimalStartTs = [0, 0];
OptimalFinishTs = [0, 20];
MinimizeRooms = 100;
RolesSoftContinuity = [|1, 2|1, 4|];
SameDegreeInRoom = 0;
Mergeability = 0;
