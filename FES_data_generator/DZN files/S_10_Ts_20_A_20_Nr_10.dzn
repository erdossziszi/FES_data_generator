StudentsNr = 10;
InstructorsNr = 15;
DaysNr = 2;
SlotsPerDay = 20;
AvailabilitySlotsLenght = 20;
RoomNr = 1;
ProgrammNr = 2;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 2;
InstructorsProgramm = [{1, 2}, {2}, {1, 2}, {1}, {1, 2}, {1}, {1}, {2}, {1, 2}, {1}, {2}, {1}, {2}, {1, 2}, {2}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, 1, |1, 1, |0, 0, |1, 1, |1, 0, |0, 1, |1, 1, |0, 0, |0, 1, |1, 1, |0, 0, |0, 1, |0, 0, |1, 1, |0, 1|];
StudentsProgramm = [1, 2, 2, 1, 2, 1, 2, 1, 2, 1];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [12, 15, 11, 3, 1, 7, 3, 4, 9, 10];
StudentsCourseIds = [{1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}];
StudentsAvailability = [|0, 0, |0, 1, |1, 1, |0, 0, |1, 1, |0, 1, |1, 1, |1, 1, |1, 1, |0, 1|];
TheoryticalMinCard = [2, 3, 3, 2, 2, 2, 2, 3, 3, 3];
CoursesInstructorIds = [{1, 2, 3, 6, 7, 12}, {6}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
LunchTsMinLen = 0;
LunchStarts = [5..15, 27..34];
SupervisorAvailable = 0;
OptimalLunchLenght = [2, 0];
OptimalStartTs = [2, 0];
OptimalFinishTs = [1, 20];
MinimizeRooms = 200;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 10;
Mergeability = 0;
