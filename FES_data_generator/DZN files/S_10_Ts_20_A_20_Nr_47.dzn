StudentsNr = 10;
InstructorsNr = 14;
DaysNr = 1;
SlotsPerDay = 20;
AvailabilitySlotsLenght = 20;
RoomNr = 1;
ProgrammNr = 1;
DegreeNr = 3;
RolesNr = 0;
CoursesNr = 6;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, |1, |1, |0, |1, |1, |1, |1, |1, |0, |0, |1, |1, |0|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [2, 3, 2, 1, 1, 1, 1, 2, 1, 3];
StudentsSupervisorId = [1, 13, 9, 3, 5, 12, 7, 3, 9, 14];
StudentsCourseIds = [{2, 4, 5}, {3, 6}, {2, 3, 6}, {1, 2, 3, 4, 5}, {1, 2, 3, 5, 6}, {1, 2, 3, 5, 6}, {1, 2, 4, 5, 6}, {1, 2, 3}, {2, 3, 4, 5, 6}, {3, 4}];
StudentsAvailability = [|0, |0, |1, |0, |1, |0, |1, |0, |0, |0|];
TheoryticalMinCard = [4, 3, 4, 5, 5, 6, 5, 3, 5, 2];
CoursesInstructorIds = [{1, 2, 4, 6, 7, 10, 11}, {3, 5, 6, 7, 8, 13}, {1, 3, 8, 11}, {5, 7, 10, 11, 12, 13, 14}, {9}, {2, 8}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
LunchTsMinLen = 0;
LunchStarts = [5..15];
SupervisorAvailable = 0;
OptimalLunchLenght = [2, 1];
OptimalStartTs = [0, 0];
OptimalFinishTs = [1, 20];
MinimizeRooms = 300;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 0;
Mergeability = 2;
