StudentsNr = 10;
InstructorsNr = 6;
DaysNr = 2;
SlotsPerDay = 40;
AvailabilitySlotsLenght = 10;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 1;
RolesNr = 0;
CoursesNr = 1;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|1, 1, 1, 1, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1, |0, 0, 1, 0, 1, 1, 1, 1, |0, 0, 1, 1, 0, 1, 0, 1, |1, 0, 1, 1, 1, 1, 1, 1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [5, 6, 6, 6, 6, 5, 5, 3, 5, 2];
StudentsCourseIds = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}];
StudentsAvailability = [|0, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 0, 0, 1, |0, 1, 1, 0, 1, 1, 0, 0, |1, 1, 1, 1, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 1, |0, 1, 0, 1, 1, 1, 1, 1, |0, 0, 0, 0, 0, 1, 1, 1, |1, 1, 1, 1, 1, 1, 1, 1, |0, 1, 1, 1, 1, 1, 1, 1|];
TheoryticalMinCard = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
CoursesInstructorIds = [{3, 4, 6}];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
LunchTsMinLen = 2;
LunchStarts = [20..25, 51..64];
SupervisorAvailable = 5;
OptimalLunchLenght = [0, 2];
OptimalStartTs = [1, 1];
OptimalFinishTs = [0, 39];
MinimizeRooms = 400;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 10;
Mergeability = 0;
