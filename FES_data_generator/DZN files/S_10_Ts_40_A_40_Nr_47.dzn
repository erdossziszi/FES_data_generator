StudentsNr = 10;
InstructorsNr = 7;
DaysNr = 2;
SlotsPerDay = 40;
AvailabilitySlotsLenght = 40;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 3;
RolesNr = 2;
CoursesNr = 6;
InstructorsProgramm = [{1}, {1}, {1}, {1}, {1}, {1}, {1}];
InstructorRolesPerProgramm = [|{7}, {1, 3, 4, 5, 7}|];
InstructorsAvailability = [|1, 1, |0, 0, |0, 1, |1, 0, |0, 1, |0, 1, |1, 1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 2, 3, 2, 3, 3, 3];
StudentsSupervisorId = [3, 2, 6, 5, 5, 4, 1, 5, 5, 3];
StudentsCourseIds = [{2, 3}, {3, 4}, {4, 5}, {3, 4}, {2, 3, 4, 5, 6}, {5}, {1, 3, 4, 5, 6}, {4}, {5}, {2}];
StudentsAvailability = [|1, 1, |0, 0, |0, 1, |0, 0, |1, 1, |1, 1, |1, 0, |0, 0, |0, 1, |1, 1|];
TheoryticalMinCard = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0];
CoursesInstructorIds = [{6, 7}, {1, 3, 4, 5, 6}, {2, 5, 6, 7}, {1, 2, 4, 5, 6}, {1}, {2}];
RolesDemands = [1, 5];
RolesContinuity = [1];
ExamLen = [1, 1, 1, 1, 2, 1, 2, 1, 1, 1];
LunchTsMinLen = 0;
LunchStarts = [20..27, 50..69];
SupervisorAvailable = 5;
OptimalLunchLenght = [3, 0];
OptimalStartTs = [2, 0];
OptimalFinishTs = [1, 40];
MinimizeRooms = 400;
RolesSoftContinuity = [|1, 2|4, 0|];
SameDegreeInRoom = 10;
Mergeability = 0;
