StudentsNr = 10;
InstructorsNr = 20;
DaysNr = 1;
SlotsPerDay = 60;
AvailabilitySlotsLenght = 60;
RoomNr = 2;
ProgrammNr = 2;
DegreeNr = 3;
RolesNr = 0;
CoursesNr = 0;
InstructorsProgramm = [{1}, {1, 2}, {2}, {2}, {1}, {1}, {2}, {1}, {1}, {1, 2}, {1, 2}, {1}, {2}, {1}, {1, 2}, {1}, {1}, {2}, {2}, {1}];
InstructorRolesPerProgramm = array2d(1..ProgrammNr,{},[]);
InstructorsAvailability = [|0, |0, |0, |0, |0, |1, |1, |0, |1, |1, |0, |0, |0, |0, |1, |1, |0, |1, |0, |0|];
StudentsProgramm = [1, 2, 1, 2, 1, 2, 2, 1, 2, 2];
StudentsDegree = [3, 2, 3, 3, 2, 3, 2, 2, 3, 2];
StudentsSupervisorId = [15, 3, 14, 4, 10, 18, 4, 8, 15, 15];
StudentsCourseIds = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}];
StudentsAvailability = [|0, |0, |1, |1, |1, |0, |0, |0, |0, |1|];
TheoryticalMinCard = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
CoursesInstructorIds = [];
RolesDemands = [];
RolesContinuity = [];
ExamLen = [1, 2, 1, 1, 2, 1, 2, 2, 1, 2];
LunchTsMinLen = 0;
LunchStarts = [30..32];
SupervisorAvailable = 0;
OptimalLunchLenght = [0, 0];
OptimalStartTs = [2, 0];
OptimalFinishTs = [1, 60];
MinimizeRooms = 300;
RolesSoftContinuity = array2d(1..2,{},[]);
SameDegreeInRoom = 0;
Mergeability = 1;
