StudentsNr = 10;
InstructorsNr = 3;
DaysNr = 1;
SlotsPerDay = 60;
AvailabilitySlotsLenght = 60;
RoomNr = 2;
ProgrammNr = 1;
DegreeNr = 1;
RolesNr = 1;
CoursesNr = 5;
InstructorsProgramm = [{1}, {1}, {1}];
InstructorRolesPerProgramm = [|{3}|];
InstructorsAvailability = [|1, |1, |1|];
StudentsProgramm = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsDegree = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
StudentsSupervisorId = [3, 1, 3, 1, 2, 2, 3, 2, 3, 3];
StudentsCourseIds = [{1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}];
StudentsAvailability = [|1, |1, |0, |1, |1, |1, |0, |0, |1, |0|];
TheoryticalMinCard = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
CoursesInstructorIds = [{3}, {2}, {2}, {3}, {1, 2, 3}];
RolesDemands = [1];
RolesContinuity = [];
ExamLen = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];
LunchTsMinLen = 2;
LunchStarts = [22..31];
SupervisorAvailable = 5;
OptimalLunchLenght = [2, 2];
OptimalStartTs = [2, 1];
OptimalFinishTs = [0, 60];
MinimizeRooms = 100;
RolesSoftContinuity = [|1|3|];
SameDegreeInRoom = 0;
Mergeability = 2;
